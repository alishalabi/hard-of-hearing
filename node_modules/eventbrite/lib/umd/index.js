(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "./request", "./constants"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("./request"), require("./constants"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.request, global.constants);
    global.Eventbrite = mod.exports;
  }
})(this, function (_exports, _request2, _constants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  _exports.default = void 0;
  _request2 = _interopRequireDefault(_request2);
  Object.keys(_constants).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(_exports, key, {
      enumerable: true,
      get: function get() {
        return _constants[key];
      }
    });
  });

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  var DEFAULT_API_URL = 'https://www.eventbriteapi.com/v3';

  var eventbrite = function eventbrite() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$baseUrl = _ref.baseUrl,
        baseUrl = _ref$baseUrl === void 0 ? DEFAULT_API_URL : _ref$baseUrl,
        token = _ref.token;

    return {
      request: function request(endpoint) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var url = "".concat(baseUrl).concat(endpoint);
        var requestOptions = options;

        if (token) {
          requestOptions = _extends({}, requestOptions, {
            headers: _extends({}, requestOptions.headers || {}, {
              Authorization: "Bearer ".concat(token)
            })
          });
        }

        return (0, _request2.default)(url, requestOptions);
      }
    };
  };

  var _default = eventbrite;
  _exports.default = _default;
});
//# sourceMappingURL=index.js.map
